{"version":3,"sources":["components/SearchBar.js","utils/Youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","process","VideoItem","video","onVideoSelect","onClick","src","snippet","thumbnails","medium","url","alt","title","VideoList","videos","renderedList","map","id","videoId","VideoDetail","VideoSrc","description","App","selectedVideo","onTermSubmit","a","youtube","get","q","response","data","items","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAgCeA,G,kNA7BXC,MAAQ,CAAEC,KAAM,I,EAEhBC,cAAgB,SAAAC,GACf,EAAKC,SAAS,CAAEH,KAAME,EAAME,OAAOC,S,EAGpCC,aAAe,SAAAJ,GACdA,EAAMK,iBAEN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,uDAGhC,OACR,qBAAKS,UAAU,wBAAf,SACI,sBAAMC,SAAUC,KAAKL,aAAcG,UAAU,UAA7C,SACI,sBAAKA,UAAU,QAAf,UACI,iDACA,uBACAG,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,KAClBa,SAAUF,KAAKV,2B,GArBHa,IAAMC,Y,QCAfC,E,OAAAA,EAAMC,OAAO,CACzBC,QAAS,wCACTC,OAAQ,CACJC,KAAM,UACNC,WAAY,EACZC,IAAI,GAAD,OAAKC,8CCSAC,G,MAbG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACxB,OACI,sBAAKC,QAAS,kBAAMD,EAAcD,IAAQhB,UAAU,kBAApD,UACI,qBAAKA,UAAU,WAAWmB,IAAKH,EAAMI,QAAQC,WAAWC,OAAOC,IAAKC,IAAKR,EAAMI,QAAQK,QACvF,qBAAKzB,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SACKgB,EAAMI,QAAQK,eCEpBC,EARG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACpBW,EAAeD,EAAOE,KAAI,SAACb,GAC/B,OAAO,cAAC,EAAD,CAAkCC,cAAeA,EAAeD,MAAOA,GAAvDA,EAAMc,GAAGC,YAGjC,OAAO,qBAAK/B,UAAU,0BAAf,SAA0C4B,KCetCI,EArBK,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MAEnB,IAAKA,EACD,OAAO,6CAGZ,IAAMiB,EAAQ,wCAAoCjB,EAAMc,GAAGC,SAE1D,OACI,gCACI,qBAAK/B,UAAU,WAAf,SACI,wBAAQyB,MAAM,cAAcN,IAAKc,MAErC,sBAAKjC,UAAU,aAAf,UACE,qBAAIA,UAAU,YAAd,eAA6BgB,EAAMI,QAAQK,MAA3C,OACA,4BAAIT,EAAMI,QAAQc,qBCkCjBC,E,4MA1Cb7C,MAAQ,CAAEqC,OAAQ,GAAIS,cAAe,M,EAMrCC,a,uCAAe,WAAM9C,GAAN,eAAA+C,EAAA,sEACUC,EAAQC,IAAI,UAAW,CAC5C9B,OAAQ,CACN+B,EAAGlD,KAHM,OACPmD,EADO,OAOb,EAAKhD,SAAS,CACZiC,OAAQe,EAASC,KAAKC,MACxBR,cAAeM,EAASC,KAAKC,MAAM,KATtB,2C,wDAaf3B,cAAgB,SAACD,GACf,EAAKtB,SAAS,CAAE0C,cAAepB,K,kEAjB/Bd,KAAKmC,aAAa,gB,+BAqBlB,OACE,sBAAKrC,UAAU,eAAf,UACE,cAAC,EAAD,CAAWH,aAAcK,KAAKmC,eAC9B,qBAAKrC,UAAU,UAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAK8B,GAAG,SAAS9B,UAAU,qBAA3B,SACE,cAAC,EAAD,CAAagB,MAAOd,KAAKZ,MAAM8C,kBAEjC,qBAAKN,GAAG,OAAO9B,UAAU,mBAAzB,SACE,cAAC,EAAD,CAAW2B,OAAQzB,KAAKZ,MAAMqC,OAAQV,cAAef,KAAKe,8B,GAlCtDZ,IAAMC,WCFxBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4a6240f6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass SearchBar extends React.Component {\r\n    state = { term: \"\" };\r\n\r\n    onInputChange = event => {\r\n     this.setState({ term: event.target.value });\r\n    }\r\n\r\n    onFormSubmit = event => {\r\n     event.preventDefault();\r\n\r\n     this.props.onFormSubmit(this.state.term)\r\n    }\r\n    render() {\r\n        return (\r\n<div className=\"search-bar ui segment\">\r\n    <form onSubmit={this.onFormSubmit} className=\"ui form\">\r\n        <div className=\"field\">\r\n            <label>Video Search</label>\r\n            <input \r\n            type=\"text\" \r\n            value={this.state.term}\r\n            onChange={this.onInputChange}\r\n            />\r\n        </div>\r\n    </form>\r\n</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n   baseURL: \"https://www.googleapis.com/youtube/v3\",  \r\n   params: {\r\n       part: \"snippet\",\r\n       maxResults: 5,\r\n       key: `${process.env.REACT_APP_API_KEY}`\r\n   }\r\n});\r\n\r\n","import React from \"react\";\r\nimport \"./VideoItem.css\";\r\n\r\nconst VideoItem = ({ video, onVideoSelect }) => {\r\n    return (\r\n        <div onClick={() => onVideoSelect(video)} className=\"video-item item\">\r\n            <img className=\"ui image\" src={video.snippet.thumbnails.medium.url} alt={video.snippet.title} />\r\n            <div className=\"content\">\r\n                <div className=\"header\">\r\n                    {video.snippet.title}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoItem;","import React from \"react\";\r\nimport VideoItem from \"./VideoItem\";\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n   const renderedList = videos.map((video) => {\r\n     return <VideoItem key={video.id.videoId} onVideoSelect={onVideoSelect} video={video} />\r\n    })\r\n    \r\n    return <div className=\"ui relaxed divided list\">{renderedList}</div>\r\n};\r\n\r\nexport default VideoList;\r\n\r\n","import React from 'react';\r\n\r\nconst VideoDetail = ({ video }) => {\r\n\r\n    if (!video) {\r\n        return <div>Loading...</div>\r\n    }\r\n\r\n   const VideoSrc = `https://www.youtube.com/embed/${video.id.videoId}`\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"ui embed\">\r\n                <iframe title=\"videoPlayer\" src={VideoSrc} />\r\n            </div>\r\n            <div className=\"ui segment\">\r\n              <h4 className=\"ui header\">  {video.snippet.title} </h4>\r\n              <p>{video.snippet.description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoDetail;","import React from \"react\";\nimport './App.css';\nimport SearchBar from \"./components/SearchBar\";\nimport youtube from \"./utils/Youtube\";\nimport VideoList from \"./components/VideoList\";\nimport VideoDetail from \"./components/VideoDetail\";\n\n\nclass App extends React.Component {\n  state = { videos: [], selectedVideo: null };\n\n  componentDidMount() {\n    this.onTermSubmit('todays top');\n  }\n\n  onTermSubmit = async term => {\n    const response = await youtube.get(\"/search\", {\n      params: {\n        q: term\n      }\n    });\n\n    this.setState({ \n      videos: response.data.items,\n    selectedVideo: response.data.items[0]\n    });\n  };\n\n  onVideoSelect = (video) => {\n    this.setState({ selectedVideo: video });\n  }\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <SearchBar onFormSubmit={this.onTermSubmit} />\n        <div className=\"ui grid\">\n          <div className=\"ui row\">\n            <div id=\"detail\" className=\"eleven wide column\">\n              <VideoDetail video={this.state.selectedVideo} />\n            </div>\n            <div id=\"list\" className=\"five wide column\">\n              <VideoList videos={this.state.videos} onVideoSelect={this.onVideoSelect} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}